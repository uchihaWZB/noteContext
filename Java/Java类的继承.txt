Java面向对象编程

	机器语言、汇编语言	面向机器
	C语言				面向过程
	Java语言			面向对象
	
	面向对象以功能来划分，而不是步骤。它的思想是 抽取一类具有相同属性和行为的事物。Java体系中“万物皆对象”（除了8种基本数据类型）

	1、抽象：把一类事物共有的[属性]和[行为]提取出来，形成一物理模板
	
	2、封装(访问控制修饰符)：	将抽象出的数据和对数据的操作封装在一起。目的 提高数据安全性，设置控制访问权限。
								数据保护在内部，其他程序只可通过被授权的操作(成员方法)才能对数据进行操作。
				
			公开级别：			public
			受保护级别：		protected	对子类和同一包中类公开
			默认级别(友好)：	无修饰符	对同一包中类公开
			私有级别：			private		只对类本身公开
			
			包：
				
			

	3、继承：通过已有类创建新类的机制，子类可以继承父类的属性和功能。提高代码复用性
	
			特点：1、子类除继承了父类的共同属性和方法外，子类还可有自己的属性和方法；
				  2、父类更通用，子类更具体；
				  3、同一包中，子类可获得父类除[private]的属性和方法，非同一包中，子类只能获得父类[public]和[protected]的属性和方法；
				  4、Java中仅支持单继承（子类只能有一个父类）；
				  
		class 子类 extends 父类 {
			
		}	
		
			super：子类中想要使用被子类隐藏的成员变量或方法，使用super关键字
									
					继承中构造器问题：先调用父类的构造方法--->按声明顺序调用成员的初始化方法--->调用自身构造方法
					子类中的构造方法中，如果没有显示的使用super去调用父类的某个构造方法，则默认使用super()，即调用父类不带参构造方法
					
					***当 父类中定义了多个构造方法时，应该包括一个不带参的构造方法（否则会被覆盖）；
					***子类主动调用父类带参构造函数，就不会调用默认无参构造函数；
					***super必须放在构造方法中第一行
					
					默认情况下单独使用对象的属性都会隐藏了 this.
					我们可以使用super和this来区分父类和子类中同名的属性和方法
					
					
