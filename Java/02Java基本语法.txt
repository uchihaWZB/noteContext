
Java基础语法
	
	1、标识符（对各种变量，方法和类等要素命名时所使用的字符序列）

		使用26个字母大小写或数字和“_”，数字不能开头，区分大小写；
		类和接口首字母大写；
		变量和方法首字母小写；
		常量每个字母大写，单词间用"_"连接
		
	2、关键字（不能用于标识符）
	
	3、常量和变量（在内存中做数据交换的一个过程）
	
		Java程序运行：开辟内存空间(JVM)--->提取数据(.class)--->CPU调度运行
		
		程序运行中，内存空间可以变化的数据量为变量，不能变化的量为常量
		
		变量：（变量存储的数据量的大小，类型由数据类型决定；变量的定义必须有初始值）
			局部变量	定义在方法和代码块
			类变量(静态变量)
			成员变量(非静态变量)
			
	4、数据类型
	
		4.1、基本数据类型（8种并分为4大类型）
			
			整数类型：字节型	byte	1字节	-128~127；		不存在常量表示法，可以把一定范围内int型常量赋给byte型变量	（一个字节8位）
					  短整型	short	2字节	-2^15~2^15-1；	同上
					  整型		int		4字节	-2^31~2^31-1	123（10）、077（8）、0x3ABC（16）
					  长整型	long	8字节	-2^63~2^63-1	108L
				
			浮点类型：单精度	float	4字节	-3.403E38~3.403E38；	***常量必须有后缀f或F
					  双精度	double	8字节	-1.798E308~1.798E308	***常量后缀可以有d或D，也可省略						小数类型和整型存储方式不同
				
			字符类型：2字节	占16位，最高位不是符号位，无负数	使用单引号	内存中存储的是Unicode表排序位置
					  char x = 'a' <==> char x = 97
					  查看字符在Unicode中的位置 (int)'a'
				
			布尔类型：2字节 两个值 true false
			
		4.2、引用数据类型
			
			类
			接口
			数组
		
		4.3、类型转换
		
			类型精度排列：byte<short<char<int<long<float<double
			
			自动转换：由低到高
			
			显示转换：由高到低	int x = (int)34.89	有可能会损失精度
			
		 ***PS：byte，short，char在计算时会自动提升为int类型，而int溢出时不会提升只会损失精度；
				任何整数类型和long做运算都会转换成long
				
				
	5、程序的执行（由上至下，顺序执行）
	
		程序流程控制注意：
		
				switch表达式的值须是byte、short、int、char
				
				break用于跳出里层循环，并执行循环下面的语句。continue用于立刻跳转到下一次循环的迭代
				
				
	6、函数和数组
	
		6.1、函数（方法）：一段能完成独立功能的代码块；				优点：利于维护，提高效率、复用
					  解决一类问题的步骤的有序集合；
					  包含于类或对象中；
		
			<public> <static> 返回值类型 方法名([参数类型 参数名]) {
				//方法体
				[return]
			}
		
			调用一个方法时所传递的变量叫实参，被调用的方法中的参数叫形参；
			
		 ***Java调用方法采用 值传递 方式，把实参的值传给形参。再具体些：如果是基本类型，即传入该值的一个拷贝；如果是类类型，传入的是引用的一个拷贝，归根还是值传递！！
		 
			方法的重载：(一个类中有两个或两个以上同名方法，但参数不同[类型、个数])
				
				Java编译器根据方法签名判断那个方法该被调用，跟返回值无关
			
		6.2、数组：(一个数据的集合)
	
			数据类型[] 变量名 = new 数据类型[整数]
			
			数组存储在堆内，其引用变量存储在栈内。访问数组：引用变量(数组的首地址)+索引