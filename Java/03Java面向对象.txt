Java面向对象
	
	机器语言、汇编语言	面向机器
	C语言				面向过程
	Java语言			面向对象
	
	面向对象以功能来划分，而不是步骤。它的思想是 抽取一类具有相同属性和行为的事物。Java体系中“万物皆对象”（除了8种基本数据类型）

	1、类和对象：
		
		类		是把具有相同 属性 和 行为 的事物抽象成一类，它是一个模版，描述一类对象的行为和状态。
		对象	是类的具体实例
		
		一个全面类的定义：
		
				package 包名;
				
				class 类名 [extend 父类] [implements 接口名]
				{
					成员变量
			类体：	构造方法
					成员方法
				}
			
		1.1、类名：首字母大写
		1.2、类体：
			1、变量的声明，用以刻画属性
			2、方法的定义，用以刻画功能
				
		1.3、变量：
			成员变量(全局变量，类的属性)：成员变量是定义在类中，方法体之外的变量，整个类内部有效。存储在堆中，成员变量在创建对象时被实例化，所以一开始声明时不用赋值。	
						
				实例变量：			不用static修饰	int x	
				类变量(静态变量)：	用static修饰	static int x
						
			局部变量(方法的属性)：在方法、构造方法或者语句块中定义的变量被称为局部变量。存储在栈中，声明和初始化在方法内，方法结束后自动被销毁
			
			PS1、成员变量与局部变量同名，成员变量就被隐藏；局部变量使用前须初始化
			
		 ***PS2、匿名对象(无主对象)：
		 
			直接 new People().name = "xxxx"; 没有指定引用变量，或指向对象的引用变量被回收了，对象没有任何引用变量指向
			
			无意义，很快会被JVM回收。实际开发中要避免
				
		1.4、方法：方法声明和方法体
		
	2、封装：	将数据和对数据的操作封装在一起。目的 提高数据安全性，设置控制访问权限。
				数据保护在内部，其他程序只可通过被授权的操作(成员方法)才能对数据进行操作。
				
			公开级别：	public
			受保护级别：protected	对子类和统一包中类公开
			默认级别：	无修饰符	对同一包中类公开
			私有级别：	private		只对类本身公开
			
	3、this关键字
		
		只能在类的对象的方法中使用，可以出现在实例方法和构造方法中，不可在类方法！代表了当前对象的引用；
		
		常用应用：在方法中使用被隐藏的成员变量