Java语言概述

	诞生于1995年，sun公司。在2009年被Oracle（甲骨文公司）收购
	
	特点：语法简单，面向对象，稳定，与平台无关，多线程，动态；
	
	跨平台性：Java在OS之上再提供一个Java运行环境，使Java写好的程序可以在任何系统上运行。一次编译，处处运行
			  Java为每个平台提供了 JVM（Java虚拟机）
	
	
Java语言分支

	JavaSE：(标准版) 是Java基础
	
	JavaME：移动端开发，已被安卓，iOS代替
	
	JavaEE：(企业级) 面向企业级
	
	
Java环境的搭建

	JDK：JavaDevelopmentKit Java开发工具 开发时使用的 （我们只安装JDK即可）
	
		JRE：JavaRuntimeEnvironment Java运行环境
			
			JVM（Java虚拟机）：Java程序在Java虚拟机中运行；
			
			Java核心类库：jre提供的让程序能运行的Java类
			
		Java开发工具：Java编译器，Java解释器
		
		
	Java运行关系：
	
	 ***Java源文件(.java文件)----(java编译器javac.exe)---->Java字节码文件(.class文件)----(由解释器java.exe将字节码加载到JVM)---->JVM(.class文件会在JVM中执行)
		
	
	配置Path，使javac.exe和java.exe通过命令在任意目录下执行
	配置classpath，可以在任意目录下找到指定的class文件位置 （针对的是运行而非编译），\jre文件夹中包含Java应用程序运行时所需的Java类库
	
	set(cmd命令)，查看所有环境变量
	
	环境变量classpath(类路径)：
		配置了classpath，运行Java程序时会优先去classpath的路径找class文件运行，就可以在任意目录来运行Java程序
		
第一个Java应用程序

	//Java程序以类的方式组织 Class
	//一个Java源文件中至少有一个类，至多只有一个public修饰的类作为公共类，源文件名优先等同于公共类名
	//类名首字母大写
	public class Hello {
	
		//主方法入口，所有的Java程序由此开始执行
		public static void main(String args[]) {
			System.out.println("hello!");
		}
	}

***Java内存

	栈内存：空间小，存储速度快；
			一些 基本类型的变量 和 对象的引用变量 在函数的栈内存中分配。局部变量超过其作用域时，Java会自动释放为该变量分配的内存空间
	
	堆内存：空间大，存储速度慢；
			存放由new创建的对象和数组。在堆中分配的内存由JVM虚拟机自动垃圾回收器管理
			
	 ***堆中产生了一个数组或对象后，在栈中可定义一个特殊变量，用以存储 数组或对象 在 堆内存 的首地址，该特殊变量即变成了数组或对象的引用变量。
	 ***引用变量相当于一个别名，用以在栈中访问数组或对象。
	 ***栈中引用变量超过其作用域时，引用变量被回收，引用变量指向的数组或对象变成垃圾(没有引用变量指向)，但仍然占这内存，随后一个不确定的时间才被回收(Java占内存的原因！！)
	
	
	
	
	
	
Java 低版本编译，高版本运行。高版本兼容低版本