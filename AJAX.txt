AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）

	AJAX 不是新的编程语言，而是一种使用现有标准的新方法。
	AJAX 是与服务器交换数据并更新部分网页的艺术，在不重新加载整个页面的情况下
	
	
XMLHttpRequest 是 AJAX 的基础，所有现代浏览器均支持 XMLHttpRequest 对象

	该对象是对Javascript的一个扩展，使网页与服务器进行通信，AJAX可以看成是XMLHttpRequest对象的代名词
	
	
	创建 XMLHttpRequest 对象的语法：
		
		variable=new XMLHttpRequest();
		
			补：现代浏览器（IE7以上，Firefox、Chrome、Safari 以及 Opera） 是支持内建对象XMLHttpRequest 的
				But，老版本的 Internet Explorer （IE5 和 IE6） 是使用ActiveX 对象
																variable=new ActiveXObject("Microsoft.XMLHTTP");
		
AJAX - 向服务器发送请求请求

	使用 XMLHttpRequest 对象的 open() 和 send() 方法：
	
		xmlhttp.open("GET","ajax_info.txt",true);
		xmlhttp.send();
		
			open(method,url,async)		method:请求类型，GET或POST
										url:文件在服务器上的位置
										async：true（异步）或 false（同步）
										
			send(string)				将请求发送到服务器，string：仅用于 POST 请求
			
			
AJAX - 服务器 响应

	使用 XMLHttpRequest 对象的 responseText 或 responseXML 属性，来获取服务器的响应
	
								responseText ： 获得字符串形式的响应数据。
								
								responseXML  ： 获得 XML 形式的响应数据。
								
				实例：
						responseText ：document.getElementById("myDiv").innerHTML=xmlhttp.responseText;
						
						responseXML  ：xmlDoc=xmlhttp.responseXML;
									   txt="";
									   x=xmlDoc.getElementsByTagName("ARTIST");
									   for (i=0;i<x.length;i++)
										  {
										  txt=txt + x[i].childNodes[0].nodeValue + "<br>";
										  }
									   document.getElementById("myDiv").innerHTML=txt;
									   
									   
AJAX - onreadystatechange 事件

	当请求被发送到服务器时，我们需要执行一些基于响应的任务
	
	XMLHttpRequest 的readyState属性 0: 请求未初始化	1: 服务器连接已建立	2: 请求已接收	3: 请求处理中	4: 请求已完成，且响应已就绪
	
						 status属性		200: "OK"；		404: 未找到页面
						
	每当 readyState 改变时，就会触发 onreadystatechange 事件。
	
	在 onreadystatechange 事件中，我们规定当服务器响应已做好被处理的准备时所执行的任务。 即（xmlhttp.readyState==4 && xmlhttp.status==200）
	